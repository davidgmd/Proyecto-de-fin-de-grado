<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Cabecera de la ventana -->
    <Style x:Key="StackPanelTituloVentana" TargetType="StackPanel">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>
    
        <!-- Texto de la cabecera -->
        <Style x:Key="TextoEncabezadoVentana" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
        </Style>
    
        <!-- Botonera -->
        <Style x:Key="StackPanelBotonera" TargetType="StackPanel">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
    
            <!-- Boton de outlook de la botonera -->
            <Style x:Key="BotonLoginOutlook" TargetType="Button">
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="Background" Value="Blue"/>
                <Setter Property="Height" Value="20"/>
            </Style>

                <!-- StackPanel del boton google calendar para el texto e imagen -->
                <Style x:Key="StackPanelBotonOutlook" TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                </Style>

                    <!-- Texto StackPAnel del boton google calendar -->
                    <Style x:Key="TextoStackPanelOutlook" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Margin" Value="5 0 5 0"/>
                        <Setter Property="FontWeight" Value="Light"/>
                    </Style>

            <!-- Boton de googlecalendar de la botonera -->
            <Style x:Key="BotonLoginGoogleCalendar" TargetType="Button">
                <Setter Property="Background" Value="CornflowerBlue"/>
                <Setter Property="Height" Value="20"/>
            </Style>
    
                <!-- StackPanel del boton google calendar para el texto e imagen -->
                <Style x:Key="StackPanelBotonGoogleCalendar" TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                </Style>
            
                    <!-- Texto StackPAnel del boton google calendar -->
                    <Style x:Key="TextoStackPanelGoogleCalendar" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Margin" Value="5 0 5 0"/>
                        <Setter Property="FontWeight" Value="Light"/>
                    </Style>
    
                    <!-- Imagen StackPanel del boton GoogleCalendar -->
                    <Style x:Key="ImagenStackPanelGoogleCalendar" TargetType="Image">
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Source" Value="\Images\icons\googlecalendar.png"/>
                    </Style>

    <!-- Calendario, este esta compuesto de varias partes, un stack panel, un viewbox que ajusta los valores y el calendario propiamente dicho -->
    <Style x:Key="StackPanelCalendario" TargetType="StackPanel">
        <Setter Property="Grid.Row" Value="1"/>
    </Style>
    
        <!-- viewbox  ajusta el tamaño etc del calendario -->
        <Style x:Key="ViewBoxCalendario" TargetType="Viewbox">
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="StretchDirection" Value="Both"/>
            <Setter Property="Width" Value="300"/>
        </Style>
    
            <!-- Calendario -->
            <Style x:Key="Calendario" TargetType="Calendar">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="IsEnabled" Value="False"/>
            </Style>
    
    <!-- StackPanel que muestra los datos del calendario y permite actualizar estos datos-->
    <Style x:Key="StackPanelDatosCalendario" TargetType="StackPanel">
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="IsEnabled" Value="False"/>
    </Style>
    
        <!-- StackPanel que permite actualizar los datos del listview, esta compuesto por un texto y un botón que contiene un icono-->
        <Style x:Key="StackPanelActualizar" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

            <Style x:Key="TextoActualizar" TargetType="TextBlock">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Margin" Value="0 0 5 0"/>
            </Style>

            <Style x:Key="BotonActualizar" TargetType="Button">
                <Setter Property="Background" Value="DarkBlue"/>
                <Setter Property="Margin" Value="0 0 5 0"/>
            </Style>

                <Style x:Key="IconoBotonActualizar" TargetType="Image">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Source" Value="\Images\icons\icons8-actualizar.png"/>
                </Style>

    <!-- Este combobox posee un itemtemplate bastante largo y complicado las propiedades que estan más adelante son las de su itemtemplate -->
    <Style x:Key="ComboBoxDatosEvento" TargetType="ComboBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="ItemsSource" Value="{Binding Path=Eventos, NotifyOnTargetUpdated=True}"/>
    </Style>
    
        <!-- Se asegura que cada bloque de datos este uno al lado del otro y cuando no haya más sitio lo coloca debajo -->
        <Style x:Key="WrappanelOrganizador" TargetType="WrapPanel">
            <Setter Property="Width" Value="350"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>

            <!-- Este stackpanel es un bloque compuesto por una categoría con un encuadre y el dato en si -->
            <Style x:Key="StackPanelBloqueDatos" TargetType="StackPanel">
                <Setter Property="Margin" Value="2"/>
            </Style>

                <!-- Coloca un cuadro para decorar la categoria y hacerla más legible -->
                <Style x:Key="BordesCategoria" TargetType="Border">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Blue"/>
                </Style>

                <!-- El valor de la categoria -->
                <Style x:Key="ValorCategoria" TargetType="TextBlock">
                    <Setter Property="Background" Value="CornflowerBlue"/>
                </Style>
    
        <!-- WrapPanel que contiene los botones para editar o eliminar los eventos -->
        <Style x:Key="WrapPanelBotonera" TargetType="WrapPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="5 0 0 0"/>
        </Style>
    
            <!-- Texto de los botones de la botonera -->
            <Style x:Key="TextoBotonera" TargetType="TextBlock">
                <Setter Property="Margin" Value="5 0 5 0"/>
            </Style>
    
    <!-- Grid que organiza los campos para añadir un nuevo evento o editar uno ya existente -->
    <Style x:Key="GridFormularioEvento" TargetType="Grid">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Grid.Row" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>
    
        <!-- Ahora vamos a ir definiendo el estilo de cada categoria y el bloque para introducir el texto, como la mayoría son iguales y solo cambia
             su posición, tenemos que crear 2 categorias base y basaremos cada estilo los detalles concretos grid.row y grid.colum -->
        <Style x:Key="TextBoxBase" TargetType="TextBox">
            <Setter Property="MaxWidth" Value="220"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Margin" Value="5 0 5 0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    
    
</ResourceDictionary>